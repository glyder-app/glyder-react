{"ast":null,"code":"import _classCallCheck from \"/Users/noahwuwuwu/squirtle/glyder-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/noahwuwuwu/squirtle/glyder-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/noahwuwuwu/squirtle/glyder-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/noahwuwuwu/squirtle/glyder-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/noahwuwuwu/squirtle/glyder-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/noahwuwuwu/squirtle/glyder-react/src/Gmap.js\";\nimport React, { Component } from \"react\";\nimport Button from \"./Button.js\";\n\nvar Gmap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Gmap, _Component);\n\n  function Gmap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Gmap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Gmap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addHexagon = function () {\n      document.getElementById(\"map\").innerHTML = \"HEXAGON\";\n    };\n\n    return _this;\n  }\n\n  _createClass(Gmap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var google = window.google;\n      var map;\n      var josefov = new google.maps.LatLng(39.7596, -121.6219); //Define OSM as base layer in addition to the default Google layers\n\n      var osmMapType = new google.maps.ImageMapType({\n        getTileUrl: function getTileUrl(coord, zoom) {\n          return \"http://tile.openstreetmap.org/\" + zoom + \"/\" + coord.x + \"/\" + coord.y + \".png\";\n        },\n        tileSize: new google.maps.Size(256, 512),\n        isPng: true,\n        alt: \"OpenStreetMap\",\n        name: \"OSM\",\n        maxZoom: 19\n      }); //Define custom WMS tiled layer\n\n      var SHLayer = new google.maps.ImageMapType({\n        getTileUrl: function getTileUrl(coord, zoom) {\n          var proj = map.getProjection();\n          var zfactor = Math.pow(2, zoom); // get Long Lat coordinates\n\n          var top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 512 / zfactor, coord.y * 512 / zfactor));\n          var bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 512 / zfactor, (coord.y + 1) * 512 / zfactor)); //create the Bounding box string\n\n          var bbox = top.lng() + \",\" + bot.lat() + \",\" + bot.lng() + \",\" + top.lat(); //base WMS URL\n\n          var url = \"https://services.sentinel-hub.com/ogc/wms/1e352d52-3b22-4a57-a51c-5cb89cf0d3b9\";\n          url += \"?REQUEST=GetMap\"; //WMS operation\n\n          url += \"&SERVICE=WMS\"; //WMS service\n\n          url += \"&VERSION=1.1.1\"; //WMS version\n\n          url += \"&LAYERS=NDVI\"; //WMS layers\n\n          url += \"&FORMAT=image/jpg\"; //WMS format\n\n          url += \"&SRS=EPSG:4326\"; //set WGS84\n\n          url += \"&BBOX=\" + bbox; // set bounding box\n\n          url += \"&WIDTH=512\"; //tile size in google\n\n          url += \"&HEIGHT=512\";\n          return url; // return URL for the tile\n        },\n        tileSize: new google.maps.Size(512, 512)\n      });\n      var mapOptions = {\n        zoom: 12,\n        center: new google.maps.LatLng(39.7596, -121.6219),\n        mapTypeId: \"OSM\",\n        mapTypeControlOptions: {\n          mapTypeIds: [\"OSM\", google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.SATELLITE, google.maps.MapTypeId.HYBRID, google.maps.MapTypeId.TERRAIN],\n          style: google.maps.MapTypeControlStyle.DROPDOWN_MENU\n        }\n      };\n      map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n      map.mapTypes.set(\"OSM\", osmMapType);\n      map.setMapTypeId(google.maps.MapTypeId.ROADMAP); //add WMS layer\n\n      map.overlayMapTypes.push(SHLayer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// Important! Always set the container height explicitly\n        React.createElement(\"div\", {\n          id: \"map\",\n          style: {\n            height: \"100vh\",\n            width: \"100vh\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        })\n      );\n    }\n  }]);\n\n  return Gmap;\n}(Component);\n\nGmap.defaultProps = {\n  center: {\n    lat: 39.7596,\n    lng: -121.6219\n  },\n  mapTypeId: \"terrain\",\n  zoom: 12\n};\nexport default Gmap;","map":{"version":3,"sources":["/Users/noahwuwuwu/squirtle/glyder-react/src/Gmap.js"],"names":["React","Component","Button","Gmap","addHexagon","document","getElementById","innerHTML","google","window","map","josefov","maps","LatLng","osmMapType","ImageMapType","getTileUrl","coord","zoom","x","y","tileSize","Size","isPng","alt","name","maxZoom","SHLayer","proj","getProjection","zfactor","Math","pow","top","fromPointToLatLng","Point","bot","bbox","lng","lat","url","mapOptions","center","mapTypeId","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","SATELLITE","HYBRID","TERRAIN","style","MapTypeControlStyle","DROPDOWN_MENU","Map","mapTypes","set","setMapTypeId","overlayMapTypes","push","height","width","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"./Button.js\";\n\nclass Gmap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 39.7596,\n      lng: -121.6219\n    },\n    mapTypeId: \"terrain\",\n    zoom: 12\n  };\n\n  componentDidMount() {\n    const google = window.google;\n\n    var map;\n\n    var josefov = new google.maps.LatLng(39.7596, -121.6219);\n    //Define OSM as base layer in addition to the default Google layers\n    var osmMapType = new google.maps.ImageMapType({\n      getTileUrl: function(coord, zoom) {\n        return (\n          \"http://tile.openstreetmap.org/\" +\n          zoom +\n          \"/\" +\n          coord.x +\n          \"/\" +\n          coord.y +\n          \".png\"\n        );\n      },\n      tileSize: new google.maps.Size(256, 512),\n      isPng: true,\n      alt: \"OpenStreetMap\",\n      name: \"OSM\",\n      maxZoom: 19\n    });\n\n    //Define custom WMS tiled layer\n    var SHLayer = new google.maps.ImageMapType({\n      getTileUrl: function(coord, zoom) {\n        var proj = map.getProjection();\n        var zfactor = Math.pow(2, zoom);\n        // get Long Lat coordinates\n        var top = proj.fromPointToLatLng(\n          new google.maps.Point(\n            (coord.x * 512) / zfactor,\n            (coord.y * 512) / zfactor\n          )\n        );\n        var bot = proj.fromPointToLatLng(\n          new google.maps.Point(\n            ((coord.x + 1) * 512) / zfactor,\n            ((coord.y + 1) * 512) / zfactor\n          )\n        );\n\n        //create the Bounding box string\n        var bbox =\n          top.lng() + \",\" + bot.lat() + \",\" + bot.lng() + \",\" + top.lat();\n\n        //base WMS URL\n        var url =\n          \"https://services.sentinel-hub.com/ogc/wms/1e352d52-3b22-4a57-a51c-5cb89cf0d3b9\";\n        url += \"?REQUEST=GetMap\"; //WMS operation\n        url += \"&SERVICE=WMS\"; //WMS service\n        url += \"&VERSION=1.1.1\"; //WMS version\n        url += \"&LAYERS=NDVI\"; //WMS layers\n        url += \"&FORMAT=image/jpg\"; //WMS format\n        url += \"&SRS=EPSG:4326\"; //set WGS84\n        url += \"&BBOX=\" + bbox; // set bounding box\n        url += \"&WIDTH=512\"; //tile size in google\n        url += \"&HEIGHT=512\";\n\n        return url; // return URL for the tile\n      },\n      tileSize: new google.maps.Size(512, 512)\n    });\n\n    var mapOptions = {\n      zoom: 12,\n      center: new google.maps.LatLng(39.7596, -121.6219),\n      mapTypeId: \"OSM\",\n      mapTypeControlOptions: {\n        mapTypeIds: [\n          \"OSM\",\n          google.maps.MapTypeId.ROADMAP,\n          google.maps.MapTypeId.SATELLITE,\n          google.maps.MapTypeId.HYBRID,\n          google.maps.MapTypeId.TERRAIN\n        ],\n        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU\n      }\n    };\n    map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n    map.mapTypes.set(\"OSM\", osmMapType);\n    map.setMapTypeId(google.maps.MapTypeId.ROADMAP);\n    //add WMS layer\n    map.overlayMapTypes.push(SHLayer);\n  }\n\n  addHexagon = () => {\n    document.getElementById(\"map\").innerHTML = \"HEXAGON\";\n  };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div\n        id=\"map\"\n        style={{\n          height: \"100vh\",\n          width: \"100vh\"\n        }}\n      />\n    );\n  }\n}\n\nexport default Gmap;\n"]},"metadata":{},"sourceType":"module"}